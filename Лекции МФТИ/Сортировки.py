import random, time


def choice_sort(N: list):  # O(N*N)
    """Сортировка выбором"""
    for i in range(len(N)):  # Все последующие элементы сравниваем с i, чтобы к концу внутренннего цикла под индексом i стояло меньшее значение. После чего переходим к следующему индексу
        for j in range(i+1, len(N)):
            if N[j] < N[i]:
                N[i], N[j] = N[j], N[i]
    return N


def insert_sort1(N: list):  # O(N*N)
    """Сортировка вставкой без временной переменной"""
    for i in range(1, len(N)):  # проходим по списку len(N) раз
        k = i  # присваем временный индекс для сортировки
        while k > 0 and N[k-1] > N[k]:  # если индекс больше 0 и предыдущий элемент больше нынешнего k
            N[k], N[k-1] = N[k-1], N[k]  # меняем их местами
            k -= 1  # и уменьшаем временный индекс
    return N


def insert_sort2(N: list):  # O(N*N)
    """Сортировка вставкой с временной переменной"""
    for i in range(len(N)):  # проходим по списку len(N) раз
        j = i - 1  # присваем временный индекс для сортировки
        temp = N[i]  # значение по текущему индексу сохраняем во временную переменную
        while N[j] > temp and j >= 0:  # если текущее значение по временному индексу больше временной переменной и временный индекс больше или равен 0
            N[j + 1] = N[j]  # элемент следующий за текущем элементом по временному инжексу становится равен текущему
            j -= 1  # временный индекс уменьшаем
        N[j + 1] = temp  # когда цикл while пройден, в последний проверенный элемент списка подставляется временная переменная
    return N


def bubble_sort(N: list):  # O(N*N)
    """Пузырьковая сортировка"""
    for i in range(1, len(N)):  # Осуществляем количество проходов по списку len - 1
        for j in range(len(N)-i):  # При каждом проходе проходим до (len - 1) - i и сравниваем текущий элемент со следующим
            if N[j] > N[j+1]:  # Если текущий больше следующего, меняем местами
                N[j], N[j+1] = N[j+1], N[j]
    return N


def sort_test(func, n: int):  # O(N*N)
    test_list = [random.randint(0, 999) for _ in range(n)]
    chk = sorted(test_list)
    s = time.time()
    result = func(test_list)
    f = time.time()
    print(f'Тестирование "{func.__doc__}" успешно пройдено. Время, затраченное на сортировку: {(f-s)*1000} миллисекунд' if chk == result else f'Тестирование "{func.__doc__}" провалено. ')


if __name__ == '__main__':
        sort_test(choice_sort, 1000)
        sort_test(insert_sort1, 1000)
        sort_test(insert_sort2, 1000)
        sort_test(bubble_sort, 1000)